class Media
!!!128176.cpp!!!	Media()
this->type = 0;
this->num = "";
this->date = "20000101";
this->idBoite = 0;
!!!128304.cpp!!!	~Media()
return;
!!!135088.cpp!!!	cmp_date(in med1 : Media*, in med2 : Media*) : const int
if (med1->get_date() > med2->get_date())
	return -1;
if (med1->get_date() == med2->get_date())
	if (med1->get_num() > med2->get_num())
		return -1;
return 1;
!!!134192.cpp!!!	set_num(in nbr : int) : void
if (nbr < 0) return;

this->num = make_num_1(this->type) + NUM_SEP_CAR + make_num_2(nbr);
!!!132272.cpp!!!	test_num(in num : string) : const int
int size = num.size();

if (size != NUM_SIZE) return 0;

if (num[NUM_SEP_POS] != NUM_SEP_CAR) return 0;

for (int i = 0; i < NUM_SEP_POS; i++)
{
	int pos = _num_valid_cars1.find(num[i]);
	if ((pos < 0) or (pos >= (int)_num_valid_cars1.size())) return 0;
}

for (int i = (NUM_SEP_POS + 1); i < NUM_SIZE; i++)
{
	int pos = _num_valid_cars2.find(num[i]);
	if ((pos < 0) or (pos >= (int)_num_valid_cars2.size())) return 0;
}

return 1;
!!!133808.cpp!!!	make_num_1(in type : int) : string
//création de la chaine
ostringstream tmp;
tmp << type;
string num_1 = tmp.str();

//complément à la taile désirée
while ((num_1.size()) < NUM_SEP_POS)
	num_1.insert(num_1.begin(), '0');

return num_1;
!!!133936.cpp!!!	make_num_2(in nbr : int) : string
//calcul de la taille de la seconde partie
int num_2_size = NUM_SIZE - (NUM_SEP_POS + 1);

//création de la chaine
ostringstream tmp;
tmp << nbr;
string num_2 = tmp.str();

//complément à la taile désirée
while ((int)(num_2.size()) < num_2_size)
	num_2.insert(num_2.begin(), '0');

return num_2;
!!!134576.cpp!!!	test_date(in date : string) : const int
if (date.size() != 8) return 0;

return Utils::test_numeric(date);
